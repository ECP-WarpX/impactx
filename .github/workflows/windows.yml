name: ðŸªŸ Windows

on: [push, pull_request]

concurrency:
  group: ${{ github.ref }}-${{ github.head_ref }}-windows
  cancel-in-progress: true

jobs:
  build_win_msvc:
    name: MSVC C++17 w/o MPI
    runs-on: windows-latest
    if: github.event.pull_request.draft == false
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      name: Install Python
      with:
        python-version: '3.x'
    - name: CCache Cache
      uses: actions/cache@v2
      # - once stored under a key, they become immutable (even if local cache path content changes)
      # - for a refresh the key has to change, e.g., hash of a tracked file in the key
      with:
        path: |
          ~/.ccache
          ~/.cache/ccache
        key: ccache-windows-winmsvc-${{ hashFiles('.github/workflows/windows.yml') }}-${{ hashFiles('cmake/dependencies/ABLASTR.cmake') }}
        restore-keys: |
          ccache-windows-winmsvc-${{ hashFiles('.github/workflows/windows.yml') }}-
          ccache-windows-winmsvc-
    - name: Build
      run: |
        python3 -m pip install -U pip setuptools wheel pytest
        python3 -m pip install -r requirements.txt
        python3 -m pip install -r examples/requirements.txt

        cmake -S . -B build               `
              -DBUILD_SHARED_LIBS=OFF     `
              -DCMAKE_BUILD_TYPE=RelWithDebInfo  `
              -DCMAKE_VERBOSE_MAKEFILE=ON `
              -DImpactX_COMPUTE=NOACC     `
              -DImpactX_MPI=OFF           `
              -DImpactX_PYTHON=ON         `
              -DPython_EXECUTABLE=python3
        if(!$?) { Exit $LASTEXITCODE }
        cmake --build build --config RelWithDebInfo --parallel 2
        if(!$?) { Exit $LASTEXITCODE }
    - name: Install
      run: |
        type build\cmake_install.cmake

        cmake --build build --config RelWithDebInfo --target install
        if(!$?) { Exit $LASTEXITCODE }
        cmake --build build --config RelWithDebInfo --target pip_install
        if(!$?) { Exit $LASTEXITCODE }

    - name: Add debugger to the PATH
      shell: bash
      run: echo "C:\\Program Files (x86)\\Windows Kits\\10\\Debuggers\\x64" >> $GITHUB_PATH

    - name: Add install .dll location to the PATH
      shell: bash
      run: echo "C:\\Program Files (x86)\\ImpactX\\bin" >> $GITHUB_PATH

    - name: Test
      run: |
          (Get-Command python3).Path
          gflags /i (Get-Command python3).Path +sls
          cdb -c "g;q" python3 D:\a\impactx\impactx\examples\fodo\run_fodo.py
          if(!$?) { Exit $LASTEXITCODE }

          gflags /i (Get-Command ctest).Path +sls
          cdb -c "g;q" ctest --test-dir build --build-config RelWithDebInfo --output-on-failure -E AMReX  -R py
          if(!$?) { Exit $LASTEXITCODE }

  build_win_clang:
    name: Clang C++17 w/ OMP w/o MPI
    runs-on: windows-2019
    if: github.event.pull_request.draft == false
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      name: Install Python
      with:
        python-version: '3.x'
    - name: CCache Cache
      uses: actions/cache@v2
      # - once stored under a key, they become immutable (even if local cache path content changes)
      # - for a refresh the key has to change, e.g., hash of a tracked file in the key
      with:
        path: |
          ~/.ccache
          ~/.cache/ccache
        key: ccache-windows-winclang-${{ hashFiles('.github/workflows/windows.yml') }}-${{ hashFiles('cmake/dependencies/ABLASTR.cmake') }}
        restore-keys: |
          ccache-windows-winclang-${{ hashFiles('.github/workflows/windows.yml') }}-
          ccache-windows-winclang-
    - uses: seanmiddleditch/gha-setup-ninja@master
    - name: Build
      shell: cmd
      run: |
        python3 -m pip install -U pip setuptools wheel pytest
        python3 -m pip install -r requirements.txt
        python3 -m pip install -r examples/requirements.txt

        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\vc\Auxiliary\build\vcvarsall.bat" x64
        cmake -S . -B build   ^
              -G "Ninja"      ^
              -DCMAKE_C_COMPILER=clang-cl   ^
              -DCMAKE_CXX_COMPILER=clang-cl ^
              -DBUILD_SHARED_LIBS=OFF       ^
              -DCMAKE_BUILD_TYPE=Release    ^
              -DCMAKE_VERBOSE_MAKEFILE=ON   ^
              -DImpactX_COMPUTE=OMP         ^
              -DImpactX_MPI=OFF             ^
              -DImpactX_PYTHON=ON           ^
              -DPython_EXECUTABLE=python3
        if errorlevel 1 exit 1
        cmake --build build --config Release --parallel 2
        if errorlevel 1 exit 1
    - name: Install
      shell: cmd
      run: |
        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\vc\Auxiliary\build\vcvarsall.bat" x64

        type build\cmake_install.cmake

        cmake --build build --config Release --target install
        if errorlevel 1 exit 1
        cmake --build build --config Release --target pip_install
        if errorlevel 1 exit 1
    - name: Test
      shell: cmd
      run: |
        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\vc\Auxiliary\build\vcvarsall.bat" x64
        ctest --test-dir build --build-config Release --output-on-failure -E AMReX -R py
        if errorlevel 1 exit 1
